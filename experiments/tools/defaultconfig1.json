{
  "epoints": [
  ],
  "rules": [
    {
      "name": "命令注入",
      "ruleCwe": "78",
      "ruleLevel": 1,
      "sources" : [
        "<java.net.URLConnection: java.io.InputStream getInputStream()>",
        "<java.net.URLConnection: java.lang.Object getContent()>",
        "<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])>",
        "<java.net.URLConnection: java.lang.String getHeaderField(int)>",
        "<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>",
        "<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>",
        "<java.net.URLConnection: java.util.Map getHeaderFields()>",
        "<java.net.HttpURLConnection: java.lang.String getResponseMessage()>",
        "<java.rmi.Naming: java.lang.String[] list(java.lang.String)>",
        "<java.applet.Applet: java.lang.String getParameter(java.lang.String)>",
        "<javax.accessibility.AccessibleText: java.lang.String getAfterIndex(int,int)>",
        "<javax.accessibility.AccessibleText: java.lang.String getAtIndex(int,int)>",
        "<javax.accessibility.AccessibleText: java.lang.String getBeforeIndex(int,int)>",
        "<javax.accessibility.AccessibleText: java.lang.String getSelectedText()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.http.Part getPart(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Collection getParts()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getPathTranslated()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getRequestedSessionId()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession()>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.http.Cookie[] getCookies()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getAttributeNames()>",
        "<javax.servlet.http.HttpServletRequest: java.io.BufferedReader getReader()>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getLocalAddr()>",
        "<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getLocales()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getLocalName()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<javax.servlet.ServletRequest: java.lang.Object getAttribute(java.lang.String)>",
        "<javax.servlet.ServletRequest: java.util.Enumeration getAttributeNames()>",
        "<javax.servlet.ServletRequest: java.io.BufferedReader getReader()>",
        "<javax.servlet.ServletRequest: javax.servlet.ServletInputStream getInputStream()>",
        "<javax.servlet.ServletRequest: java.lang.String getLocalAddr()>",
        "<javax.servlet.ServletRequest: java.util.Locale getLocale()>",
        "<javax.servlet.ServletRequest: java.util.Enumeration getLocales()>",
        "<javax.servlet.ServletRequest: java.lang.String getLocalName()>",
        "<javax.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<javax.servlet.ServletRequest: java.util.Map getParameterMap()>",
        "<javax.servlet.ServletRequest: java.util.Enumeration getParameterNames()>",
        "<javax.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>",
        "<javax.servlet.ServletConfig: java.util.Enumeration getInitParameterNames()>",
        "<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>",
        "<javax.servlet.ServletContext: java.util.Enumeration getInitParameterNames()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getQueryString()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getPathTranslated()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>",
        "<jakarta.servlet.http.HttpServletRequest: jakarta.servlet.http.Cookie[] getCookies()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>",
        "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>",
        "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>",
        "<jakarta.servlet.http.HttpServletRequest: java.io.BufferedReader getReader()>",
        "<jakarta.servlet.http.HttpServletRequest: jakarta.servlet.ServletInputStream getInputStream()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<jakarta.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>",
        "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<jakarta.servlet.ServletRequest: java.io.BufferedReader getReader()>",
        "<jakarta.servlet.ServletRequest: jakarta.servlet.ServletInputStream getInputStream()>",
        "<jakarta.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<jakarta.servlet.ServletRequest: java.util.Map getParameterMap()>",
        "<jakarta.servlet.ServletRequest: java.util.Enumeration getParameterNames()>",
        "<jakarta.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<javax.portlet.ClientDataRequest: java.io.BufferedReader getReader()>",
        "<javax.portlet.ClientDataRequest: java.io.InputStream getPortletInputStream()>",
        "<javax.portlet.PortletRequest: java.lang.String getParameter(java.lang.String)>",
        "<javax.portlet.PortletRequest: java.util.Map getParameterMap()>",
        "<javax.portlet.PortletRequest: java.util.Enumeration getParameterNames()>",
        "<javax.portlet.PortletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestCookieMap()>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderMap()>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderValuesMap()>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestParameterMap()>",
        "<javax.faces.context.ExternalContext: java.util.Iterator getRequestParameterNames()>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestParameterValuesMap()>",
        "<javax.faces.context.ExternalContext: java.lang.String getRequestPathInfo()>",
        "<javax.faces.component.ValueHolder: java.lang.Object getValue()>",
        "<javax.faces.component.ValueHolder: java.lang.Object getLocalValue()>",
        "<javax.faces.component.html.HtmlCommandButton: java.lang.Object getValue()>",
        "<javax.faces.component.UIInput: java.lang.String getRequiredMessage()>",
        "<javax.faces.component.UIInput: java.lang.String getValidatorMessage()>",
        "<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>",
        "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFieldName(java.lang.String)>",
        "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(org.apache.commons.fileupload.FileItemHeaders)>",
        "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeaderEncoding()>",
        "<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemHeaders getParsedHeaders(java.lang.String)>",
        "<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemIterator getItemIterator(org.apache.commons.fileupload.RequestContext)>",
        "<org.apache.commons.fileupload.FileUploadBase: java.util.List parseReqhest(org.apache.commons.fileupload.RequestContext)>",
        "<com.sun.mail.smtp.SMTPTransport: java.lang.String getExtensionParameter(java.lang.String)>",
        "<com.sun.mail.smtp.SMTPTransport: java.lang.String getLastServerResponse()>",
        "<java.net.URL: java.lang.Object getContent()>",
        "<java.net.URL: java.lang.Object getContent(java.lang.Class[])>",
        "<javax.servlet.http.HttpSession: java.lang.Object getAttribute(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getTemplateFile10(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithWhitelistSafe02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String getAllUsers(org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.FileController: org.springframework.http.ResponseEntity downloadFile(java.lang.Integer)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getXmlFile06(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity getImageSafe02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String getUserById(java.lang.Integer,org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.CommandController: java.lang.String pingHost(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithProcessBuilderSafe06(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaAspect05(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: org.springframework.http.ResponseEntity readFile(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity downloadFile03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.util.Map getConfigFileSafe08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeArraySafe03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithFullValidation07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: java.util.Map deleteFile(java.lang.Integer)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithMultipleParams09(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String addUserForm(org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.XmlController: java.util.Map parseXmlSafe(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.HomeController: java.lang.String index()>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithProcessBuilder06(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String deleteUser(java.lang.Integer)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String readFileContent04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandController: java.lang.String executeCommand(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getTemplateFileSafe10(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getXmlFileSafe06(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaUtilsSafe08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: java.util.List listFiles()>",
        "<edu.thu.benchmark.annotated.controller.HttpController: java.util.Map connectUrl(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String readFileContentSafe04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String findByEmail(java.lang.String,org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase21(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.XmlController: java.util.Map processXml(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase22(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase20(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase25(int,int)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: int testCase26(int,java.lang.String,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase23(java.util.List)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase24(java.lang.Integer,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase29(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: java.lang.String filePage(org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: int testCase27(java.lang.Integer)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase28(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String fileOperationWithApiSafe10(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: void welcome(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase10(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase11(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaUtils08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase14(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase15(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase12(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase13(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase18(java.lang.String,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase19(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase16(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase17(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase41(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase42(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getLogFileSafe07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeCommandSafe01(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase32(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase33(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: java.util.Map uploadFile(org.springframework.web.multipart.MultipartFile)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase30(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase31(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase36(java.lang.Integer,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase37(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase34(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase35(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String updateUser(java.lang.Integer,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandController: java.lang.String executeSystemCommand(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase38(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity getFile01(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase39(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity getFileSafe01(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.HttpController: org.springframework.http.ResponseEntity fetchUrl(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase40(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: org.springframework.http.ResponseEntity viewFile(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaAspectSafe05(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithJavaApiSafe09(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaService04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.XmlController: java.util.Map parseXml(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getFileWithInjectionSafe05(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase01(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: int testCase07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase05(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: int testCase06(int,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getLogFile07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.HttpController: org.springframework.http.ResponseEntity fetchUrlSafe(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase09(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.util.Map getConfigFile08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String fileOperationWithCommand10(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaServiceSafe04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithSystemProperty02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.util.Map readProperties09(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.HttpController: java.lang.String httpPage()>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithConfigPrefix07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getFileWithInjection05(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.XmlController: java.lang.String xmlPage()>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.util.Map readPropertiesSafe09(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandController: java.lang.String showCommandPage()>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity downloadFileSafe03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: void searchByUsername(java.lang.String,javax.servlet.http.HttpServletResponse)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String addUser(edu.thu.benchmark.annotated.entity.User)>",
        "<edu.thu.benchmark.annotated.config.DatabaseConfig: org.springframework.jdbc.datasource.init.DataSourceInitializer dataSourceInitializer(javax.sql.DataSource)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeArrayWithInjection03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity getImage02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.util.List findByCondition(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeCommand01(java.lang.String)>"
      ],
      "sinks" : [
        "<java.lang.ClassLoader: java.lang.Class defineClass(byte[],int,int)>",
        "<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)>",
        "<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectDomain)>",
        "<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectDomain)>",
        "<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>",
        "<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>",
        "<java.lang.Runtime: java.lang.Process exec(java.lang.String)>",
        "<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>",
        "<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[])>",
        "<java.lang.Runtime: java.lang.Process exec(java.lang.Sftring[],java.lang.String[],java.io.File)>",
        "<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[])>",
        "<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>",
        "<java.lang.Runtime: void load(java.lang.String)>",
        "<java.lang.Runtime: void loadLibrary(java.lang.String)>",
        "<java.lang.System: void load(java.lang.String)>",
        "<java.lang.System: void loadLibrary(java.lang.String)>",
        "<java.lang.ProcessBuilder: void <init>(java.util.List)>",
        "<java.lang.ProcessBuilder: void <init>(java.lang.String[])>",
        "<java.lang.ProcessBuilder: java.util.List command()>",
        "<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.util.List)>",
        "<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String[])>",
        "<java.lang.reflect.InvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>",
        "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>",
        "<javax.script.Invocable: java.lang.Object invokeFunction(java.lang.String,java.lang.Object[])>",
        "<javax.script.Invocable: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>",
        "<flex.management.jmx.MBeanServerGateWay: java.lang.Object invoke(java.lang.String,java.lang.String,java.lang.Object[],java.lang.String[])>",
        "<flex.messaging.io.amf.client.AMFConnection: java.lang.Object call(java.lang.String,java.lang.Object[])>",
        "<org.apache.axis.client.AdminClient: void main(java.lang.String[])>",
        "<org.apache.axis.client.AdminClient: java.lang.String process(java.io.InputStream)>",
        "<org.apache.axis.client.AdminClient: java.lang.String process(java.lang.String)>",
        "<org.apache.axis.client.AdminClient: java.lang.String process(java.lang.String[])>",
        "<org.apache.axis.client.AdminClient: java.lang.String process(java.net.URL)>",
        "<org.apache.axis.client.AdminClient: java.lang.String process(org.apache.axis.utils.Options,java.io.InputStream)>",
        "<org.apache.axis.client.AdminClient: java.lang.String process(org.apache.axis.utils.Options,java.lang.String)>",
        "<org.apache.axis.client.Call: java.lang.Object invoke(java.lang.Object[])>",
        "<org.apache.axis.client.Call: java.lang.Object invoke(java.lang.String,java.lang.Object[])>",
        "<org.apache.axis.client.Call: java.lang.Object invoke(java.lang.String,java.lang.String,java.lang.Object[])>",
        "<org.apache.axis.client.Call: void setOperation(org.apache.axis.description.OperationDesc)>",
        "<org.apache.axis.client.Call: void setOperation(javax.xml.namespace.QName,javax.xml.namespace.QName)>",
        "<org.apache.axis.client.Call: void setOperation(javax.xml.namespace.QName,java.lang.String)>",
        "<org.apache.axis.client.Call: void setOperation(java.lang.String)>",
        "<org.apache.axis.client.Call: void setOperationName(java.lang.String)>",
        "<org.apache.axis.client.Call: void setOperationName(javax.xml.namespace.QNAme)>",
        "<org.apache.axis.client.Call: void setSOAPActionURI(java.lang.String)>",
        "<org.apache.axis.client.Call: void setTargetEndpointAddress(java.lang.String)>",
        "<org.apache.axis.client.Call: void setTargetEndpointAddress(java.net.URL)>",
        "<org.owasp.esapi.Executor: org.owasp.esapi.ExecuteResult executeSystemCommand(java.io.File,java.util.List)>",
        "<org.owasp.esapi.Executor: org.owasp.esapi.ExecuteResult executeSystemCommand(java.io.File,java.util.List,java.io.File,org.owasp.esapi.codecs.Codec,boolean,boolean)>",
        "<javax.faces.el.MethodBinding: java.lang.Object invoke(javax.faces.context.FacesContext,java.lang.Object[])>",
        "<org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object)>",
        "<org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>",
        "<org.springframework.util.ReflectionUtils: java.lang.Object invokeJdbcMethod(java.lang.reflect.Method,java.lang.Object)>",
        "<org.springframework.util.ReflectionUtils: java.lang.Object invokeJdbcMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>"
      ]
    },
    {
      "name": "路径操作",
      "ruleCwe": "22",
      "ruleLevel": 1,
      "sources": [
        "<java.net.URLConnection: java.io.InputStream getInputStream()>",
        "<java.net.URLConnection: java.lang.Object getContent()>",
        "<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])>",
        "<java.net.URLConnection: java.lang.String getHeaderField(int)>",
        "<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>",
        "<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>",
        "<java.net.URLConnection: java.util.Map getHeaderFields()>",
        "<java.net.HttpURLConnection: java.lang.String getResponseMessage()>",
        "<java.rmi.Naming: java.lang.String[] list(java.lang.String)>",
        "<java.applet.Applet: java.lang.String getParameter(java.lang.String)>",
        "<javax.accessibility.AccessibleText: java.lang.String getAfterIndex(int,int)>",
        "<javax.accessibility.AccessibleText: java.lang.String getAtIndex(int,int)>",
        "<javax.accessibility.AccessibleText: java.lang.String getBeforeIndex(int,int)>",
        "<javax.accessibility.AccessibleText: java.lang.String getSelectedText()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.http.Part getPart(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Collection getParts()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getPathTranslated()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getRequestedSessionId()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession()>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.http.Cookie[] getCookies()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getAttributeNames()>",
        "<javax.servlet.http.HttpServletRequest: java.io.BufferedReader getReader()>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getLocalAddr()>",
        "<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getLocales()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getLocalName()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<javax.servlet.ServletRequest: java.lang.Object getAttribute(java.lang.String)>",
        "<javax.servlet.ServletRequest: java.util.Enumeration getAttributeNames()>",
        "<javax.servlet.ServletRequest: java.io.BufferedReader getReader()>",
        "<javax.servlet.ServletRequest: javax.servlet.ServletInputStream getInputStream()>",
        "<javax.servlet.ServletRequest: java.lang.String getLocalAddr()>",
        "<javax.servlet.ServletRequest: java.util.Locale getLocale()>",
        "<javax.servlet.ServletRequest: java.util.Enumeration getLocales()>",
        "<javax.servlet.ServletRequest: java.lang.String getLocalName()>",
        "<javax.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<javax.servlet.ServletRequest: java.util.Map getParameterMap()>",
        "<javax.servlet.ServletRequest: java.util.Enumeration getParameterNames()>",
        "<javax.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>",
        "<javax.servlet.ServletConfig: java.util.Enumeration getInitParameterNames()>",
        "<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>",
        "<javax.servlet.ServletContext: java.util.Enumeration getInitParameterNames()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getQueryString()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getPathTranslated()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>",
        "<jakarta.servlet.http.HttpServletRequest: jakarta.servlet.http.Cookie[] getCookies()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>",
        "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>",
        "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>",
        "<jakarta.servlet.http.HttpServletRequest: java.io.BufferedReader getReader()>",
        "<jakarta.servlet.http.HttpServletRequest: jakarta.servlet.ServletInputStream getInputStream()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<jakarta.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>",
        "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<jakarta.servlet.ServletRequest: java.io.BufferedReader getReader()>",
        "<jakarta.servlet.ServletRequest: jakarta.servlet.ServletInputStream getInputStream()>",
        "<jakarta.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<jakarta.servlet.ServletRequest: java.util.Map getParameterMap()>",
        "<jakarta.servlet.ServletRequest: java.util.Enumeration getParameterNames()>",
        "<jakarta.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<javax.portlet.ClientDataRequest: java.io.BufferedReader getReader()>",
        "<javax.portlet.ClientDataRequest: java.io.InputStream getPortletInputStream()>",
        "<javax.portlet.PortletRequest: java.lang.String getParameter(java.lang.String)>",
        "<javax.portlet.PortletRequest: java.util.Map getParameterMap()>",
        "<javax.portlet.PortletRequest: java.util.Enumeration getParameterNames()>",
        "<javax.portlet.PortletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestCookieMap()>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderMap()>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderValuesMap()>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestParameterMap()>",
        "<javax.faces.context.ExternalContext: java.util.Iterator getRequestParameterNames()>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestParameterValuesMap()>",
        "<javax.faces.context.ExternalContext: java.lang.String getRequestPathInfo()>",
        "<javax.faces.component.ValueHolder: java.lang.Object getValue()>",
        "<javax.faces.component.ValueHolder: java.lang.Object getLocalValue()>",
        "<javax.faces.component.html.HtmlCommandButton: java.lang.Object getValue()>",
        "<javax.faces.component.UIInput: java.lang.String getRequiredMessage()>",
        "<javax.faces.component.UIInput: java.lang.String getValidatorMessage()>",
        "<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>",
        "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFieldName(java.lang.String)>",
        "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(org.apache.commons.fileupload.FileItemHeaders)>",
        "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeaderEncoding()>",
        "<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemHeaders getParsedHeaders(java.lang.String)>",
        "<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemIterator getItemIterator(org.apache.commons.fileupload.RequestContext)>",
        "<org.apache.commons.fileupload.FileUploadBase: java.util.List parseReqhest(org.apache.commons.fileupload.RequestContext)>",
        "<com.sun.mail.smtp.SMTPTransport: java.lang.String getExtensionParameter(java.lang.String)>",
        "<com.sun.mail.smtp.SMTPTransport: java.lang.String getLastServerResponse()>",
        "<java.net.URL: java.lang.Object getContent()>",
        "<java.net.URL: java.lang.Object getContent(java.lang.Class[])>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getTemplateFile10(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithWhitelistSafe02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String getAllUsers(org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.FileController: org.springframework.http.ResponseEntity downloadFile(java.lang.Integer)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getXmlFile06(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity getImageSafe02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String getUserById(java.lang.Integer,org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.CommandController: java.lang.String pingHost(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithProcessBuilderSafe06(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaAspect05(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: org.springframework.http.ResponseEntity readFile(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity downloadFile03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.util.Map getConfigFileSafe08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeArraySafe03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithFullValidation07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: java.util.Map deleteFile(java.lang.Integer)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithMultipleParams09(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String addUserForm(org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.XmlController: java.util.Map parseXmlSafe(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.HomeController: java.lang.String index()>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithProcessBuilder06(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String deleteUser(java.lang.Integer)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String readFileContent04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandController: java.lang.String executeCommand(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getTemplateFileSafe10(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getXmlFileSafe06(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaUtilsSafe08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: java.util.List listFiles()>",
        "<edu.thu.benchmark.annotated.controller.HttpController: java.util.Map connectUrl(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String readFileContentSafe04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String findByEmail(java.lang.String,org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase21(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.XmlController: java.util.Map processXml(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase22(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase20(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase25(int,int)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: int testCase26(int,java.lang.String,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase23(java.util.List)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase24(java.lang.Integer,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase29(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: java.lang.String filePage(org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: int testCase27(java.lang.Integer)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase28(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String fileOperationWithApiSafe10(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: void welcome(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase10(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase11(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaUtils08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase14(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase15(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase12(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase13(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase18(java.lang.String,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase19(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase16(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase17(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase41(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase42(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getLogFileSafe07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeCommandSafe01(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase32(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase33(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: java.util.Map uploadFile(org.springframework.web.multipart.MultipartFile)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase30(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase31(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase36(java.lang.Integer,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase37(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase34(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase35(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String updateUser(java.lang.Integer,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandController: java.lang.String executeSystemCommand(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase38(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity getFile01(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase39(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity getFileSafe01(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.HttpController: org.springframework.http.ResponseEntity fetchUrl(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase40(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: org.springframework.http.ResponseEntity viewFile(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaAspectSafe05(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithJavaApiSafe09(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaService04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.XmlController: java.util.Map parseXml(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getFileWithInjectionSafe05(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase01(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: int testCase07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase05(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: int testCase06(int,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getLogFile07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.HttpController: org.springframework.http.ResponseEntity fetchUrlSafe(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase09(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.util.Map getConfigFile08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String fileOperationWithCommand10(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaServiceSafe04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithSystemProperty02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.util.Map readProperties09(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.HttpController: java.lang.String httpPage()>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithConfigPrefix07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getFileWithInjection05(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.XmlController: java.lang.String xmlPage()>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.util.Map readPropertiesSafe09(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandController: java.lang.String showCommandPage()>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity downloadFileSafe03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: void searchByUsername(java.lang.String,javax.servlet.http.HttpServletResponse)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String addUser(edu.thu.benchmark.annotated.entity.User)>",
        "<edu.thu.benchmark.annotated.config.DatabaseConfig: org.springframework.jdbc.datasource.init.DataSourceInitializer dataSourceInitializer(javax.sql.DataSource)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeArrayWithInjection03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity getImage02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.util.List findByCondition(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeCommand01(java.lang.String)>"
      ],
      "sinks": [
        "<java.util.zip.ZipFile: void <init>(java.lang.String)>",
        "<java.util.zip.ZipFile: void <init>(java.lang.String,java.nio.charset.Charset)>",
        "<org.apache.commons.compress.archivers.zip.ZipFile: void <init>(java.lang.String)>",
        "<org.apache.commons.compress.archivers.zip.ZipFile: void <init>(java.lang.String,java.lang.String)>",
        "<java.nio.file.Files: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
        "<java.io.FileInputStream: void <init>(java.lang.String)>",
        "<java.io.FileOutputStream: void <init>(java.lang.String)>",
        "<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>",
        "<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>",
        "<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>",
        "<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>",
        "<java.io.File: void <init>(java.io.File,java.lang.String)>",
        "<java.io.File: void <init>(java.lang.String,java.lang.String)>",
        "<java.io.File: void <init>(java.lang.String)>",
        "<java.io.File: void <init>(java.net.URI)>",
        "<java.io.FileReader: void <init>(java.lang.String)>",
        "<java.io.FileReader: void <init>(java.io.File)>",
        "<java.io.FileReader: void <init>(java.io.FileDescriptor)>",
        "<java.io.FileWriter: void <init>(java.lang.String)>",
        "<java.io.FileWriter: void <init>(java.lang.String,boolean)>",
        "<java.io.FileWriter: void <init>(java.io.File)>",
        "<java.io.FileWriter: void <init>(java.io.File,boolean)>",
        "<java.io.FileWriter: void <init>(java.io.FileDescriptor)>",
        "<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>",
        "<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>",
        "<java.net.URL: void <init>(java.lang.String)>",
        "<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>",
        "<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>",
        "<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>",
        "<java.net.URL: void <init>(java.net.URL,java.lang.String)>",
        "<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>",
        "<org.springframework.util.ResourceUtils: java.io.File(java.lang.String)>",
        "<org.springframework.util.PropertiesPersister: void store(java.util.Properties,java.io.OutputStream,java.lang.String)>",
        "<org.springframework.util.PropertiesPersister: void storeToXml(java.util.Properties,java.io.OutputStream,java.lang.String)>",
        "<org.springframework.util.PropertiesPersister: void storeToXml(java.util.Properties,java.io.OutputStream,java.lang.String,java.lang.String)>",
        "<org.springframework.util.PropertiesPersister: void store(java.util.Properties,java.io.Writer,java.lang.String)>",
        "<oracle.jbo.html.databeans.BaseNavigatorBar: void setImageDir(java.lang.String)>",
        "<oracle.jbo.html.databeans.RowSetBrowser: void setImageDir(java.lang.String)>",
        "<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>"
      ]
    },
    {
      "name": "sql注入",
      "ruleCwe": "89",
      "ruleLevel": 1,
      "sources" : [
        "<java.net.URLConnection: java.io.InputStream getInputStream()>",
        "<java.net.URLConnection: java.lang.Object getContent()>",
        "<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])>",
        "<java.net.URLConnection: java.lang.String getHeaderField(int)>",
        "<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>",
        "<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>",
        "<java.net.URLConnection: java.util.Map getHeaderFields()>",
        "<java.net.HttpURLConnection: java.lang.String getResponseMessage()>",
        "<java.rmi.Naming: java.lang.String[] list(java.lang.String)>",
        "<java.applet.Applet: java.lang.String getParameter(java.lang.String)>",
        "<javax.accessibility.AccessibleText: java.lang.String getAfterIndex(int,int)>",
        "<javax.accessibility.AccessibleText: java.lang.String getAtIndex(int,int)>",
        "<javax.accessibility.AccessibleText: java.lang.String getBeforeIndex(int,int)>",
        "<javax.accessibility.AccessibleText: java.lang.String getSelectedText()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.http.Part getPart(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Collection getParts()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getPathTranslated()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getRequestedSessionId()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession()>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.http.Cookie[] getCookies()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getAttributeNames()>",
        "<javax.servlet.http.HttpServletRequest: java.io.BufferedReader getReader()>",
        "<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getLocalAddr()>",
        "<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getLocales()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getLocalName()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<javax.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>",
        "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>",
        "<javax.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<javax.servlet.ServletRequest: java.lang.Object getAttribute(java.lang.String)>",
        "<javax.servlet.ServletRequest: java.util.Enumeration getAttributeNames()>",
        "<javax.servlet.ServletRequest: java.io.BufferedReader getReader()>",
        "<javax.servlet.ServletRequest: javax.servlet.ServletInputStream getInputStream()>",
        "<javax.servlet.ServletRequest: java.lang.String getLocalAddr()>",
        "<javax.servlet.ServletRequest: java.util.Locale getLocale()>",
        "<javax.servlet.ServletRequest: java.util.Enumeration getLocales()>",
        "<javax.servlet.ServletRequest: java.lang.String getLocalName()>",
        "<javax.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<javax.servlet.ServletRequest: java.util.Map getParameterMap()>",
        "<javax.servlet.ServletRequest: java.util.Enumeration getParameterNames()>",
        "<javax.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>",
        "<javax.servlet.ServletConfig: java.util.Enumeration getInitParameterNames()>",
        "<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>",
        "<javax.servlet.ServletContext: java.util.Enumeration getInitParameterNames()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getQueryString()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getPathTranslated()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>",
        "<jakarta.servlet.http.HttpServletRequest: jakarta.servlet.http.Cookie[] getCookies()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>",
        "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>",
        "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>",
        "<jakarta.servlet.http.HttpServletRequest: java.io.BufferedReader getReader()>",
        "<jakarta.servlet.http.HttpServletRequest: jakarta.servlet.ServletInputStream getInputStream()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<jakarta.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>",
        "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>",
        "<jakarta.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<jakarta.servlet.ServletRequest: java.io.BufferedReader getReader()>",
        "<jakarta.servlet.ServletRequest: jakarta.servlet.ServletInputStream getInputStream()>",
        "<jakarta.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)>",
        "<jakarta.servlet.ServletRequest: java.util.Map getParameterMap()>",
        "<jakarta.servlet.ServletRequest: java.util.Enumeration getParameterNames()>",
        "<jakarta.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<javax.portlet.ClientDataRequest: java.io.BufferedReader getReader()>",
        "<javax.portlet.ClientDataRequest: java.io.InputStream getPortletInputStream()>",
        "<javax.portlet.PortletRequest: java.lang.String getParameter(java.lang.String)>",
        "<javax.portlet.PortletRequest: java.util.Map getParameterMap()>",
        "<javax.portlet.PortletRequest: java.util.Enumeration getParameterNames()>",
        "<javax.portlet.PortletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestCookieMap()>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderMap()>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderValuesMap()>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestParameterMap()>",
        "<javax.faces.context.ExternalContext: java.util.Iterator getRequestParameterNames()>",
        "<javax.faces.context.ExternalContext: java.util.Map getRequestParameterValuesMap()>",
        "<javax.faces.context.ExternalContext: java.lang.String getRequestPathInfo()>",
        "<javax.faces.component.ValueHolder: java.lang.Object getValue()>",
        "<javax.faces.component.ValueHolder: java.lang.Object getLocalValue()>",
        "<javax.faces.component.html.HtmlCommandButton: java.lang.Object getValue()>",
        "<javax.faces.component.UIInput: java.lang.String getRequiredMessage()>",
        "<javax.faces.component.UIInput: java.lang.String getValidatorMessage()>",
        "<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>",
        "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFieldName(java.lang.String)>",
        "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(org.apache.commons.fileupload.FileItemHeaders)>",
        "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeaderEncoding()>",
        "<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemHeaders getParsedHeaders(java.lang.String)>",
        "<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemIterator getItemIterator(org.apache.commons.fileupload.RequestContext)>",
        "<org.apache.commons.fileupload.FileUploadBase: java.util.List parseReqhest(org.apache.commons.fileupload.RequestContext)>",
        "<com.sun.mail.smtp.SMTPTransport: java.lang.String getExtensionParameter(java.lang.String)>",
        "<com.sun.mail.smtp.SMTPTransport: java.lang.String getLastServerResponse()>",
        "<java.net.URL: java.lang.Object getContent()>",
        "<java.net.URL: java.lang.Object getContent(java.lang.Class[])>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getTemplateFile10(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithWhitelistSafe02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String getAllUsers(org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.FileController: org.springframework.http.ResponseEntity downloadFile(java.lang.Integer)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getXmlFile06(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity getImageSafe02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String getUserById(java.lang.Integer,org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.CommandController: java.lang.String pingHost(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithProcessBuilderSafe06(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaAspect05(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: org.springframework.http.ResponseEntity readFile(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity downloadFile03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.util.Map getConfigFileSafe08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeArraySafe03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithFullValidation07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: java.util.Map deleteFile(java.lang.Integer)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithMultipleParams09(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String addUserForm(org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.XmlController: java.util.Map parseXmlSafe(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.HomeController: java.lang.String index()>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithProcessBuilder06(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String deleteUser(java.lang.Integer)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String readFileContent04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandController: java.lang.String executeCommand(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getTemplateFileSafe10(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getXmlFileSafe06(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaUtilsSafe08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: java.util.List listFiles()>",
        "<edu.thu.benchmark.annotated.controller.HttpController: java.util.Map connectUrl(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String readFileContentSafe04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String findByEmail(java.lang.String,org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase21(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.XmlController: java.util.Map processXml(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase22(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase20(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase25(int,int)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: int testCase26(int,java.lang.String,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase23(java.util.List)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase24(java.lang.Integer,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase29(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: java.lang.String filePage(org.springframework.ui.Model)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: int testCase27(java.lang.Integer)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase28(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String fileOperationWithApiSafe10(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: void welcome(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase10(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase11(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaUtils08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase14(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase15(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase12(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase13(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase18(java.lang.String,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase19(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase16(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase17(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase41(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase42(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getLogFileSafe07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeCommandSafe01(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase32(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase33(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: java.util.Map uploadFile(org.springframework.web.multipart.MultipartFile)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase30(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase31(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase36(java.lang.Integer,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase37(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase34(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase35(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String updateUser(java.lang.Integer,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandController: java.lang.String executeSystemCommand(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase38(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity getFile01(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase39(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity getFileSafe01(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.HttpController: org.springframework.http.ResponseEntity fetchUrl(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase40(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.FileController: org.springframework.http.ResponseEntity viewFile(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaAspectSafe05(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithJavaApiSafe09(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaService04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.XmlController: java.util.Map parseXml(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getFileWithInjectionSafe05(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase01(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: int testCase07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: java.util.List testCase05(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: int testCase06(int,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getLogFile07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.HttpController: org.springframework.http.ResponseEntity fetchUrlSafe(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.SqlInjectionTestController: edu.thu.benchmark.annotated.entity.User testCase09(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.util.Map getConfigFile08(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String fileOperationWithCommand10(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeViaServiceSafe04(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithSystemProperty02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.util.Map readProperties09(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.HttpController: java.lang.String httpPage()>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeWithConfigPrefix07(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.lang.String getFileWithInjection05(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.XmlController: java.lang.String xmlPage()>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: java.util.Map readPropertiesSafe09(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandController: java.lang.String showCommandPage()>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity downloadFileSafe03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: void searchByUsername(java.lang.String,javax.servlet.http.HttpServletResponse)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.lang.String addUser(edu.thu.benchmark.annotated.entity.User)>",
        "<edu.thu.benchmark.annotated.config.DatabaseConfig: org.springframework.jdbc.datasource.init.DataSourceInitializer dataSourceInitializer(javax.sql.DataSource)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeArrayWithInjection03(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.PathTraversalController: org.springframework.http.ResponseEntity getImage02(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.UserController: java.util.List findByCondition(java.lang.String)>",
        "<edu.thu.benchmark.annotated.controller.CommandInjectionController: java.lang.String executeCommand01(java.lang.String)>"
      ],
      "sinks" : [
        "<java.sql.Connection: java.sql.CallableStatement prepareCall(java.lang.String)>",
        "<java.sql.Connection: java.sql.CallableStatement prepareCall(java.lang.String,int,int)>",
        "<java.sql.Connection: java.sql.CallableStatement prepareCall(java.lang.String,int,int,int)>",
        "<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>",
        "<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String,int)>",
        "<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String,int[])>",
        "<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String,int,int)>",
        "<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String,int,int,int)>",
        "<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])>",
        "<java.sql.Statement: boolean execute(java.lang.String)>",
        "<java.sql.Statement: boolean execute(java.lang.String,int)>",
        "<java.sql.Statement: boolean execute(java.lang.String,int[])>",
        "<java.sql.Statement: boolean execute(java.lang.String,java.lang.String[])>",
        "<java.sql.Statement: int executeUpdate(java.lang.String)>",
        "<java.sql.Statement: int executeUpdate(java.lang.String,int)>",
        "<java.sql.Statement: int executeUpdate(java.lang.String,int[])>",
        "<java.sql.Statement: int executeUpdate(java.lang.String,java.lang.String[])>",
        "<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>",
        "<java.sql.Statement: void addBatch(java.lang.String)>",
        "<javax.sql.RowSet: void setCommand(java.lang.String)>",
        "<javax.persistence.EntityManager: javax.persistence.Query createNativeQuery(java.lang.String)>",
        "<javax.persistence.EntityManager: javax.persistence.Query createNativeQuery(java.lang.String,java.lang.Class)>",
        "<javax.persistence.EntityManager: javax.persistence.Query createNativeQuery(java.lang.String,java.lang.String)>",
        "<javax.persistence.EntityManager: javax.persistence.Query createQuery(java.lang.String)>",
        "<javax.persistence.EntityManager: javax.persistence.Query createQuery(javax.persistence.criteria.CriteriaUpdate)>",
        "<javax.persistence.EntityManager: javax.persistence.Query createQuery(javax.persistence.criteria.CriteriaDelete)>",
        "<javax.persistence.EntityManager: javax.persistence.TypedQuery createQuery(javax.persistence.criteria.CriteriaQuery)>",
        "<javax.persistence.EntityManager: javax.persistence.TypedQuery createQuery(java.lang.String,java.lang.Class)>",
        "<org.apache.torque.util.BasePeer: java.util.List executeQuery(java.lang.String)>",
        "<org.apache.torque.util.BasePeer: java.util.List executeQuery(java.lang.String,boolean,java.sql.Connection)>",
        "<org.apache.torque.util.BasePeer: java.util.List executeQuery(java.lang.String,int,int,boolean,java.sql.Connection)>",
        "<org.apache.torque.util.BasePeer: java.util.List executeQuery(java.lang.String,int,int,java.lang.String,boolean)>",
        "<org.apache.torque.util.BasePeer: java.util.List executeQuery(java.lang.String,java.lang.String)>",
        "<org.apache.torque.util.BasePeer: java.util.List executeQuery(java.lang.String,java.lang.String,boolean)>",
        "<org.apache.torque.util.BasePeer: int executeStatement(java.lang.String)>",
        "<org.apache.torque.util.BasePeer: int executeStatement(java.lang.String,java.sql.Connection)>",
        "<org.apache.torque.util.BasePeer: int executeStatement(java.lang.String,java.lang.String)>",
        "<org.springframework.jdbc.core.JdbcTemplate: void execute(java.lang.String)>",
        "<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object queryForObject(java.lang.String,java.lang.Class)>",
        "<org.springframework.jdbc.core.JdbcTemplate: org.springframework.jdbc.support.rowset.SqlRowSet queryForRowSet(java.lang.String)>",
        "<org.springframework.jdbc.core.JdbcTemplate: java.util.List query(java.lang.String,org.springframework.jdbc.core.RowMapper)>",
        "<org.springframework.jdbc.core.JdbcTemplate: java.util.Map queryForMap(java.lang.String)>",
        "<org.springframework.jdbc.core.JdbcTemplate: java.util.List queryForList(java.lang.String)>",
        "<org.springframework.jdbc.core.JdbcTemplate: java.util.List queryForList(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.mapper.UserSqlInjectionMapper: java.util.List findUsersInListUnsafe(java.lang.String)>",
        "<edu.thu.benchmark.annotated.mapper.UserSqlInjectionMapper: int deleteUsersUnsafe(java.lang.String)>",
        "<edu.thu.benchmark.annotated.mapper.UserSqlInjectionMapper: java.util.List findUsersByNameUnsafe(java.lang.String)>",
        "<edu.thu.benchmark.annotated.mapper.UserSqlInjectionMapper: int updateUserDynamicUnsafe(int,java.lang.String)>",
        "<edu.thu.benchmark.annotated.mapper.UserSqlInjectionMapper: java.util.List findUsersWithLimitUnsafe(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.mapper.UserSqlInjectionMapper: java.util.List findUsersByMultipleConditionsUnsafe(java.lang.String)>",
        "<edu.thu.benchmark.annotated.mapper.UserSqlInjectionMapper: java.util.List searchUsersSemiSafe(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.mapper.UserSqlInjectionMapper: java.util.List searchUsersUnsafe(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.mapper.UserSqlInjectionMapper: edu.thu.benchmark.annotated.entity.User findUserByCredentialsUnsafe(java.lang.String,java.lang.String)>",
        "<edu.thu.benchmark.annotated.mapper.UserSqlInjectionMapper: java.util.List findUsersSortedUnsafe(java.lang.String)>",
        "<edu.thu.benchmark.annotated.mapper.UserSqlInjectionMapper: edu.thu.benchmark.annotated.entity.User findUserByEmailUnsafe(java.lang.String)>"

      ]
    }
  ],

  "excludes": [

  ],
  "autoDetect": true,
  "project": "",
  "jdk": "",
  "callgraphAlgorithm": "SPARK"
}
